<?php

/**
 * BaseDatEstructura
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property decimal $idestructura
 * @property decimal $idconcepto
 * @property decimal $idespecialidad
 * @property decimal $idorgano
 * @property string $denominacion
 * @property string $abreviatura
 * @property string $codigo
 * @property string $fax
 * @property string $telefono
 * @property decimal $iddpt
 * @property string $direccion
 * @property string $correo
 * @property string $objetosocial
 * @property string $funcioneslegales
 * @property decimal $idproyecto
 * @property decimal $idestado
 * @property _numeric $modificado
 * @property decimal $idtipoescala
 * @property decimal $idicono
 * @property decimal $idsector
 * @property ModEstructuracomp.nomConcepto $ModEstructuracomp.nomConcepto
 * @property ModEstructuracomp.nomEstado $ModEstructuracomp.nomEstado
 * @property ModEstructuracomp.nomIcono $ModEstructuracomp.nomIcono
 * @property ModEstructuracomp.nomFilaestruc $ModEstructuracomp.nomFilaestruc
 * @property ModEstructuracomp.nomOrgano $ModEstructuracomp.nomOrgano
 * @property ModEstructuracomp.datProyecto $ModEstructuracomp.datProyecto
 * @property ModEstructuracomp.nomTipoescala $ModEstructuracomp.nomTipoescala
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseDatEstructura extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('dat_estructura');
        $this->hasColumn('idestructura', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             ));
        $this->hasColumn('idconcepto', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('idespecialidad', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('idorgano', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('denominacion', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('abreviatura', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('codigo', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('fax', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('telefono', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('iddpt', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('direccion', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('correo', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('objetosocial', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('funcioneslegales', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('idproyecto', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             ));
        $this->hasColumn('idestado', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'default' => '0',
             'primary' => false,
             ));
        $this->hasColumn('modificado', '_numeric', null, array(
             'type' => '_numeric',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'default' => '\'{0}\'::numeric[]',
             'primary' => false,
             ));
        $this->hasColumn('idtipoescala', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'default' => '0',
             'primary' => false,
             ));
        $this->hasColumn('idicono', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'default' => '0',
             'primary' => false,
             ));
        $this->hasColumn('idsector', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ModEstructuracomp.nomConcepto', array(
             'local' => 'idconcepto',
             'foreign' => 'idconcepto'));

        $this->hasOne('ModEstructuracomp.nomEstado', array(
             'local' => 'idestado',
             'foreign' => 'idestado'));

        $this->hasOne('ModEstructuracomp.nomIcono', array(
             'local' => 'idicono',
             'foreign' => 'idicono'));

        $this->hasOne('ModEstructuracomp.nomFilaestruc', array(
             'local' => 'idestructura',
             'foreign' => 'idfila'));

        $this->hasOne('ModEstructuracomp.nomOrgano', array(
             'local' => 'idconcepto, idorgano',
             'foreign' => 'idconcepto, idorgano'));

        $this->hasOne('ModEstructuracomp.datProyecto', array(
             'local' => 'idproyecto',
             'foreign' => 'idproyecto'));

        $this->hasOne('ModEstructuracomp.nomTipoescala', array(
             'local' => 'idtipoescala',
             'foreign' => 'idtipoescala'));
    }
}