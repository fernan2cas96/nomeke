<?php

/**
 * BaseSegUsuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property decimal $idusuario
 * @property string $nombreusuario
 * @property string $contrasenna
 * @property string $ip
 * @property decimal $iddominio
 * @property decimal $iddesktop
 * @property decimal $idtema
 * @property decimal $ididioma
 * @property string $estado
 * @property string $perfilxml
 * @property string $accesodirecto
 * @property date $caduca
 * @property boolean $activo
 * @property decimal $idpersona
 * @property decimal $posiciondominio
 * @property boolean $accesoconcurrente
 * @property boolean $reescribirsesion
 * @property boolean $mostrarentidad
 * @property ModSeguridad.nomDesktop $ModSeguridad.nomDesktop
 * @property ModSeguridad.nomIdioma $ModSeguridad.nomIdioma
 * @property ModSeguridad.nomTema $ModSeguridad.nomTema
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseSegUsuario extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('seg_usuario');
        $this->hasColumn('idusuario', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'mod_seguridad.sec_usuario_seq',
             ));
        $this->hasColumn('nombreusuario', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('contrasenna', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('ip', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('iddominio', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('iddesktop', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('idtema', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('ididioma', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('estado', 'string', null, array(
             'type' => 'string',
             'fixed' => true,
             'unsigned' => false,
             'notnull' => false,
             'default' => '0',
             'primary' => false,
             ));
        $this->hasColumn('perfilxml', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('accesodirecto', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('caduca', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('activo', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'default' => false,
             'primary' => false,
             ));
        $this->hasColumn('idpersona', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             ));
        $this->hasColumn('posiciondominio', 'decimal', null, array(
             'type' => 'decimal',
             'fixed' => false,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'sequence' => 'mod_seguridad.sec_posiciondominiousuario_seq',
             ));
        $this->hasColumn('accesoconcurrente', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'default' => false,
             'primary' => false,
             ));
        $this->hasColumn('reescribirsesion', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'default' => false,
             'primary' => false,
             ));
        $this->hasColumn('mostrarentidad', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'notnull' => true,
             'default' => false,
             'primary' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ModSeguridad.nomDesktop', array(
             'local' => 'iddesktop',
             'foreign' => 'iddesktop'));

        $this->hasOne('ModSeguridad.nomIdioma', array(
             'local' => 'ididioma',
             'foreign' => 'ididioma'));

        $this->hasOne('ModSeguridad.nomTema', array(
             'local' => 'idtema',
             'foreign' => 'idtema'));
    }
}